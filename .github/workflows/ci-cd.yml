name: Continuous Integration and Delivery

on:
    push:
        branches:
            -   '*'
        tags:
            -   release/v[0-9]+.[0-9]+.[0-9]

env:
    PROJECT_NAME: singleton
    ECS_TASK_DEFINITION: ecs-task-definition.json

permissions:
    id-token: write

jobs:
    integration:
        runs-on: ubuntu-latest
        outputs:
            image-name: ${{ steps.generate-image-name.output.image_name }}
        steps:
            -   name: Configure AWS Credentials
                uses: aws-actions/configure-aws-credentials@v4
                with:
                    role-to-assume: ${{ secrets.AWS_ROLE_BUILDSYSTEM_ARN }}
                    aws-region: ${{ secrets.AWS_REGION }}

            -   name: Login to Amazon ECR
                id: login-ecr
                uses: aws-actions/amazon-ecr-login@v2

            -   name: Checkout Code
                uses: actions/checkout@v4

            -   name: Generate Image Name
                id: generate-image-name
                env:
                    IMAGE_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                    IMAGE_REPOSITORY: ${{ env.PROJECT_NAME }}
                run: |
                    IMAGE_TAG=${{ github.ref_name }}-${{ github.sha }}  # TAGs cannot contain slashes.
                    IMAGE_TAG=${IMAGE_TAG//\//-}  # e.g. release/v0.0.0-<sha> --> release-v0.0.0-<sha>
                    echo "image_name=$IMAGE_REGISTRY/$IMAGE_REPOSITORY/$IMAGE_TAG" >> "$GITHUB_OUTPUT"
                    echo "IMAGE_NAME=${image_name}"

            -   name: Build Docker Image
                run: |
                    docker build -t ${{ steps.generate-image-name.outputs.image_name }} .

            -   name: Push Docker Image
                run: |
                    docker push ${{ steps.generate-image-name.outputs.image_name }}

            -   name: Output image
                run: echo ${{ steps.build-image.outputs.image }}

    delivery:
        runs-on: ubuntu-latest
        needs: integration
        if: startsWith(github.ref, 'refs/tags/release')
        steps:
            -   name: Configure AWS Credentials
                uses: aws-actions/configure-aws-credentials@v4
                with:
                    role-to-assume: ${{ secrets.AWS_ROLE_BUILDSYSTEM_ARN }}
                    aws-region: ${{ secrets.AWS_REGION }}

            -   name: Login to Amazon ECR
                id: login-ecr
                uses: aws-actions/amazon-ecr-login@v2

            -   name: Debug
                run: |
                    echo ${{ needs.integration.outputs.image_name }}
