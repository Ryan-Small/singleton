name: Continuous Integration and Delivery

on:
    push:
        branches:
            -   '*'
        tags:
            -   release/v[0-9]+.[0-9]+.[0-9]

env:
    PROJECT_NAME: singleton
    ECS_TASK_DEFINITION: ecs-task-definition.json

permissions:
    id-token: write

jobs:
    integration:
        runs-on: ubuntu-latest
        outputs:
            image-name: ${{ steps.build-.output.exists }}
        steps:
            -   name: Configure AWS Credentials
                uses: aws-actions/configure-aws-credentials@v4
                with:
                    role-to-assume: ${{ secrets.AWS_ROLE_BUILDSYSTEM_ARN }}
                    aws-region: ${{ secrets.AWS_REGION }}

            -   name: Login to Amazon ECR
                id: login-ecr
                uses: aws-actions/amazon-ecr-login@v2

            -   name: Checkout Code
                uses: actions/checkout@v4

            -   name: Build Docker Image
                id: build-image
                env:
                   IMAGE_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
                   IMAGE_REPOSITORY: ${{ env.PROJECT_NAME }}
                   IMAGE_TAG: ${{ github.ref_name }}-${{ github.sha }}
                run: |
                    imageTag=${IMAGE_TAG//\//-}  # Replaces '/' with '-'
                    docker build -t $IMAGE_REGISTRY/$IMAGE_REPOSITORY:$IMAGE_TAG .
                    echo "image=$IMAGE_REGISTRY/$IMAGE_REPOSITORY:$IMAGE_TAG" >> "$GITHUB_OUTPUT"

            -   name: Push Docker Image
                run: |
                    docker push ${{ steps.build-image.outputs.image }}

            -   name: Output image
                run: echo ${{ steps.build-image.outputs.image }}

    delivery:
        runs-on: ubuntu-latest
        needs: [ integration ]
        if: startsWith(github.ref, 'refs/tags/release')
        steps:
            -   name: Configure AWS Credentials
                uses: aws-actions/configure-aws-credentials@v4
                with:
                    role-to-assume: ${{ secrets.AWS_ROLE_BUILDSYSTEM_ARN }}
                    aws-region: ${{ secrets.AWS_REGION }}

            -   name: Login to Amazon ECR
                id: login-ecr
                uses: aws-actions/amazon-ecr-login@v2
